services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  airflow-init:
    image: apache/airflow:2.6.2
    command: "airflow db init"
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    depends_on:
      - postgres
      
  redis:
    image: redis:latest
    networks:
      - airflow_network

  webserver:
    image: apache/airflow:2.6.2
    restart: always
    command: webserver
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__WEBSERVER__AUTH_BACKENDS=airflow.webserver.auth.backend.default
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    networks:
      - airflow_network

  scheduler:
    image: apache/airflow:2.6.2
    command: scheduler
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    networks:
      - airflow_network

volumes:
  postgres_data:
    driver: local

networks:
  airflow_network:
    driver: bridge
